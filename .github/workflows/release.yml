name: MAUI Release

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  discussions: write

defaults:
  run:
    shell: pwsh

env:
  DOTNET_VERSION: "9.0.x"
  WINDOWS_TFM: "net9.0-windows10.0.19041.0"
  ANDROID_TFM: "net9.0-android"
  IOS_TFM: "net9.0-ios"
  MACOS_TFM: "net9.0-maccatalyst"
  CSPROJ_PATH: "src/XkcdViewer.Maui/XkcdViewer.Maui.csproj"
  NUGETCONFIG_PATH: "src/nuget.config"
  BUILD_CONFIG: Release
  WINDOWS_ARTIFACTS_PATH: "artifacts_windows"
  ANDROID_ARTIFACTS_PATH: "artifacts_android"
  MACOS_ARTIFACTS_PATH: "artifacts_macos"
  IOS_ARTIFACTS_PATH: "artifacts_ios"
  TELERIK_USERNAME: ${{secrets.MyTelerikAccountUsername}}
  TELERIK_PASSWORD: ${{secrets.MyTelerikAccountPassword}}

jobs:
  # [JOB] Generate Common Resources [/JOB]
  shared-resources:
    name: Create Shared Resources
    runs-on: windows-latest
    outputs:
      app_version: ${{steps.version-creator.outputs.app_version}}
    steps:
    # Generates a version number using year.monthday.run_number.0 (e.g., 2024.824.1.0)
    - name: Generate version number using date and run number
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $runNumber = "$env:GITHUB_RUN_NUMBER"
        $ver = $buildDay + "." + $runNumber + ".0"
        echo "app_version=$ver" >> $env:GITHUB_OUTPUT

  # [JOB] Windows Sideload Build [/JOB]
  maui-windows-sideload:
    name: Build Windows Sideload
    needs: shared-resources
    runs-on: windows-latest
    if: ${{ success() && needs.shared-resources.outputs.app_version != '' }}
    strategy:
      matrix:
        RID: [win10-arm64, win10-x64]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{env.DOTNET_VERSION}}

    # Needed only for WinUI builds
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.3.2

    - name: Install MAUI workloads
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      run: dotnet restore ${{env.CSPROJ_PATH}} --configfile ${{env.NUGETCONFIG_PATH}}

    # Update the app manifest using the sideload publisher identity
    - name: Update manifest for side load build
      run: |
        [xml]$manifest = get-content "src\XkcdViewer.Maui\Platforms\Windows\Package.appxmanifest"
        $manifest.Package.Identity.Version = "${{needs.shared-resources.outputs.app_version}}"
        $manifest.Package.Identity.Name = "61469LanceLotSoftware.XKCDComicViewer"
        $manifest.Package.Identity.Publisher = 'CN=" Lance McCarthy", O=" Lance McCarthy", L=Revere, S=Massachusetts, C=US'
        $manifest.Package.Properties.DisplayName = "xkcd Comic Viewer"
        $manifest.Package.Properties.PublisherDisplayName = "Lance McCarthy"
        $manifest.Package.Applications.Application.VisualElements.DisplayName = "xkcd Viewer"
        $manifest.save("src\XkcdViewer.Maui\Platforms\Windows\Package.appxmanifest")
    
    - name: Build Maui WinUI project
      run: dotnet publish ${{env.CSPROJ_PATH}} -f "${{env.WINDOWS_TFM}}" -p:RuntimeIdentifierOverride=${{matrix.RID}} -p:PublishTrimmed=False -p:GenerateAppxPackageOnBuild=true -p:AppxPackageSigningEnabled=false -p:EnableMsixTooling=true --self-contained=true

    - name: Process MSIX
      id: process-msix-file
      run: |
        $msixPath = Get-ChildItem -Filter XkcdViewer.Maui*.msix -Recurse | %{$_.FullName}
        New-Item -Path . -Name ${{env.WINDOWS_ARTIFACTS_PATH}} -ItemType Directory
        $finalMsixPath = "${{github.workspace}}\${{env.WINDOWS_ARTIFACTS_PATH}}\XkcdViewer_v${{needs.shared-resources.outputs.app_version}}_${{matrix.RID}}.msix"
        Move-Item -Path $msixPath -Destination $finalMsixPath -Force
        echo "PACKAGE_PATH=$finalMsixPath" >> $env:GITHUB_OUTPUT

    - name: Attach artifacts to workflow run
      uses: actions/upload-artifact@v4
      with:     
        name: "XkcdViewer_v${{needs.shared-resources.outputs.app_version}}_${{matrix.RID}}.msix" 
        path: ${{steps.process-msix-file.outputs.PACKAGE_PATH}}
        if-no-files-found: error
        retention-days: 30

  # [JOB] Windows Microsoft Store Build [/JOB]
  maui-windows-msstore:
    name: Build Windows MS Store
    needs: shared-resources
    runs-on: windows-latest
    if: ${{ success() && needs.shared-resources.outputs.app_version != '' }}
    outputs:
      windows_artifact_url: ${{steps.upload-artifact.outputs.artifact-url}}
    env:
      RID: win10-x64
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{env.DOTNET_VERSION}}

    # Needed only for WinUI builds
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.3.2    

    - name: Install MAUI workload
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    # Restore NuGet packages ahead of time because we want to use the dedicated nuget.config file
    - name: Restore NuGet packages
      run: dotnet restore ${{env.CSPROJ_PATH}} --configfile ${{env.NUGETCONFIG_PATH}}

    # Update the manifest for Microsoft Store identity
    - name: Update manifest for Microsoft Store build
      run: |
        [xml]$manifest = get-content 'src\XkcdViewer.Maui\Platforms\Windows\Package.appxmanifest'
        $manifest.Package.Identity.Version = "${{needs.shared-resources.outputs.app_version}}"
        $manifest.Package.Identity.Name = '61469LanceLotSoftware.XKCDComicViewer'
        $manifest.Package.Identity.Publisher = 'CN=51B5A8B2-5D86-4826-BBE2-C92E963A4C02'
        $manifest.Package.Properties.DisplayName = "xkcd Comic Viewer"
        $manifest.Package.Properties.PublisherDisplayName = "Lancelot Software"
        $manifest.Package.Applications.Application.VisualElements.DisplayName = "xkcd Viewer"
        $manifest.save("src\XkcdViewer.Maui\Platforms\Windows\Package.appxmanifest")

    # Compile and publish the WinUI x64 project for the Microsoft Store (no code signing)
    - name: Build WinUI win10-x64
      run: dotnet publish ${{env.CSPROJ_PATH}} -f "${{env.WINDOWS_TFM}}" -p:RuntimeIdentifierOverride="win10-x64" -p:PublishTrimmed=False -p:GenerateAppxPackageOnBuild=true -p:AppxPackageSigningEnabled=false -p:EnableMsixTooling=true --self-contained=true

      # Compile and publish the WinUI ARM64 project for the Microsoft Store (no code signing)
    - name: Build WinUI win10-arm64
      run: dotnet publish ${{env.CSPROJ_PATH}} -f "${{env.WINDOWS_TFM}}" -p:RuntimeIdentifierOverride="win10-arm64" -p:PublishTrimmed=False -p:GenerateAppxPackageOnBuild=true -p:AppxPackageSigningEnabled=false -p:EnableMsixTooling=true --self-contained=true

    # Find the msix file
    - name: Generate msixbundle
      id: generate-msixbundle
      run: |
        $sdkToolsPath = Join-Path -Path 'C:\Program Files (x86)\Windows Kits\10\bin' -ChildPath 10.0.19041.0 -AdditionalChildPath x86
        $env:Path += ";$sdkToolsPath"
        New-Item -Path . -Name ${{env.WINDOWS_ARTIFACTS_PATH}} -ItemType Directory
        Get-ChildItem -Filter XkcdViewer.Maui*.msix -Recurse | %{ Copy-Item $_.FullName -Destination ${{env.WINDOWS_ARTIFACTS_PATH}} }
        Set-Location ${{env.WINDOWS_ARTIFACTS_PATH}}
        MakeAppx.exe bundle /bv "${{needs.shared-resources.outputs.app_version}}" /d . /p "XkcdViewer_v${{needs.shared-resources.outputs.app_version}}_x64_arm64_MsftStoreOnly.msixbundle"
        $msixBundlePath = "${{github.workspace}}\${{env.WINDOWS_ARTIFACTS_PATH}}\XkcdViewer_v${{needs.shared-resources.outputs.app_version}}_x64_arm64_MsftStoreOnly.msixbundle"
        echo "msixbundle_path=$msixBundlePath" >> $env:GITHUB_OUTPUT

    # Attaching the asset to workflow run
    - name: Attach artifacts
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:     
        name: "XkcdViewer_v${{needs.shared-resources.outputs.app_version}}_MsftStoreOnly.msixbundle" 
        path: ${{steps.generate-msixbundle.outputs.msixbundle_path}}
        if-no-files-found: error
        retention-days: 30

  # [JOB] Submit Update to Microsoft Store [/JOB]
  publish_to_msstore:
    name: Submit To Microsoft Store
    if: ${{success()}}
    needs: [maui-windows-msstore]
    runs-on: ubuntu-latest
    steps:
      - name: Configure Credentials
        uses: microsoft/store-submission@v1
        with:
          command: configure
          type: win32
          seller-id: '10113620'
          product-id: '9PMCKHT7M93P'
          tenant-id: '237e90e1-29b9-4350-913d-f3837799f3c0'
          client-id: '99d69d81-6234-46be-acf5-e7b59e7887af'
          client-secret: ${{secrets.ENTRA_CLIENT_SECRET}}

      - name: Draft Submission
        uses: microsoft/store-submission@v1
        with:
          command: update
          product-update: '{"packages":[{"packageUrl":"${{env.ARTIFACT_URL}}","languages":["en"],"architectures":["X64", "ARM64"],"isSilentInstall":true}]}'
        env:
          ARTIFACT_URL: ${{needs.maui-windows-msstore.outputs.windows_artifact_url}}

      - name: Publish Submission
        uses: microsoft/store-submission@v1
        with:
          command: publish

  # [JOB] Android Build [/JOB]
  maui-android:
    name: Build Android
    needs: shared-resources
    runs-on: windows-latest
    if: ${{ success() && needs.shared-resources.outputs.app_version != '' }}
    env:
      RID: android-arm64
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{env.DOTNET_VERSION}}

    - uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '11'

    - name: Install MAUI workload
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      run: dotnet restore ${{env.CSPROJ_PATH}} --configfile ${{env.NUGETCONFIG_PATH}}

    - name: Build Maui Android project
      run: dotnet build ${{env.CSPROJ_PATH}} -c Debug -f "${{env.ANDROID_TFM}}" -p:PublishTrimmed=False

    # ! When you have a Google Play account and certificates, we can switch to this release setup
    # # Decode keystore base64 secret into a local file
    # - name: Decode the Keystore into File
    #   run: |
    #     $file_bytes = [System.Convert]::FromBase64String("${{secrets.ANDROID_SIGNING_KEYSTORE_BASE64}}")
    #     [IO.File]::WriteAllBytes("${{github.workspace}}/${{secrets.ANDROID_SIGNING_KEYSTORE_FILENAME}}", $file_bytes)

    # # Docs https://learn.microsoft.com/en-us/dotnet/maui/android/deployment/publish-cli?view=net-maui-9.0
    # - name: Build MAUI Android project
    #   run: dotnet publish ${{env.CSPROJ_PATH}} -c ${{env.BUILD_CONFIGURATION}} -f "${{env.ANDROID_TFM}}" -p:AndroidKeyStore=true -p:AndroidSigningKeyStore="${{github.workspace}}/${{secrets.ANDROID_SIGNING_KEYSTORE_FILENAME}}" -p:AndroidSigningStorePass="${{secrets.ANDROID_SIGNING_STORE_PASS}}" -p:AndroidSigningKeyAlias="${{secrets.ANDROID_SIGNING_KEY_ALIAS}}" -p:AndroidSigningKeyPass="${{secrets.ANDROID_SIGNING_KEY_PASS}}"

    # # Upload the artifact the Action's result
    # # To publish to the store, see https://github.com/marketplace/actions/upload-android-release-to-play-store
    # - name: Upload Android AAB artifacts (better than APKs)
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: "Android Artifacts" 
    #     path: "${{github.workspace}}/**/*Signed.aab"
    #     if-no-files-found: warn
    #     retention-days: 10

  # [JOB] iOS Build [/JOB]
  maui-ios:
    name: Build iOS
    needs: shared-resources
    runs-on: macos-15
    if: ${{ success() && needs.shared-resources.outputs.app_version != '' }}
    # TODO Consider matrix for text flight and sideload
    env:
      RID: ios-arm64
      CODESIGN_KEY: "Apple Distribution: Lancelot Software (L25222N3C7)"
      CODESIGN_PROV_PROFILE: "xkcdviewer_ios_appstore"
      CODESIGN_PROFILE_TYPE: "IOS_APP_STORE"
      APP_ID: "com.LancelotSoftware.xkcdviewer"
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # If the GitHub runner doesn't have latest Xcode needed by the project.
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{env.DOTNET_VERSION}}

    - name: Install MAUI workloads
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      run: dotnet restore ${{env.CSPROJ_PATH}} --configfile ${{env.NUGETCONFIG_PATH}}

    - name: Build MAUI iOS project
      run: dotnet build ${{env.CSPROJ_PATH}} -c Release -f "${{env.IOS_TFM}}" -p:PublishTrimmed=True -p:MtouchLink=SdkOnly

    # ! When you have an apple account and certificates, we can switch to this release setup
    # # Docs https://github.com/Apple-Actions/import-codesign-certs
    # - name: Import Code-Signing Certificates
    #   uses: Apple-Actions/import-codesign-certs@v2
    #   with:
    #     p12-file-base64: "${{secrets.APPLE_DISTRIBUTION_CERT_BASE64}}"
    #     p12-password: "${{secrets.APPLE_DISTRIBUTION_CERT_PASSWORD}}"

    # # Docs https://github.com/Apple-Actions/download-provisioning-profiles
    # - uses: Apple-Actions/download-provisioning-profiles@v2
    #   with:
    #     profile-type: ${{env.APP_ID}}
    #     bundle-id: "${{env.CODESIGN_PROV_PROFILE}}"
    #     issuer-id: "${{secrets.APPSTORE_API_ISSUER_ID}}"
    #     api-key-id: "${{secrets.APPSTORE_API_KEY_ID}}"
    #     api-private-key: "${{secrets.APPSTORE_API_PRIVATE_KEY}}"

    # # Docs https://learn.microsoft.com/en-us/dotnet/maui/ios/deployment/publish-cli?view=net-maui-9.0
    # - name: Build MAUI iOS project
    #   run: |
    #     dotnet publish ${{env.CSPROJ_PATH}} -f "${{env.IOS_TFM}}" -p:RuntimeIdentifier=${{env.RID}} -p:PublishTrimmed=true -p:MtouchLink=SdkOnly -p:ApplicationId=${{env.APP_ID}} -p:CodesignProvision=${{env.CODESIGN_PROV_PROFILE}} -p:CodesignKey=${{env.CODESIGN_KEY}}

    # # Docs https://github.com/Apple-Actions/upload-testflight-build
    # - name: 'Upload app to TestFlight'
    #   uses: apple-actions/upload-testflight-build@v1
    #   with: 
    #     app-path: "${{github.workspace}}/**/*.ipa" 
    #     issuer-id: ${{secrets.APPSTORE_API_ISSUER_ID}}
    #     api-key-id: "${{secrets.APPSTORE_API_KEY_ID}}"
    #     api-private-key: "${{secrets.APPSTORE_API_PRIVATE_KEY}}"

    # - name: Publish iOS build artifacts
    #   uses: actions/upload-artifact@v4
    #   with:     
    #     name: "iOS artifacts" 
    #     path: "*.app"
    #     if-no-files-found: warn
    #     retention-days: 30

  # [JOB] MacCatalyst Build [/JOB]
  maui-macos:
    name: Build MacCatalyst
    needs: shared-resources
    runs-on: macos-15
    if: ${{ success() && needs.shared-resources.outputs.app_version != '' }}
    strategy:
      matrix:
        RID: [maccatalyst-arm64, maccatalyst-x64]
        # Consider matrix for text flight and sideload
    env:
      CODESIGN_KEY: "Apple Distribution: Lancelot Software (L25222N3C7)"
      CODESIGN_PROV_PROFILE: "xkcdviewer_maccatalyst_appstore"
      CODESIGN_PROFILE_TYPE: "MAC_APP_STORE"
      CODESIGN_ENTITLEMENTS: "Platforms/MacCatalyst/Entitlements.plist"
      APP_ID: "com.LancelotSoftware.xkcdviewer"
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # If the GitHub runner doesn't have latest Xcode needed by the project.
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{env.DOTNET_VERSION}}

    - name: Install MAUI workload
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore NuGet packages
      run: dotnet restore ${{env.CSPROJ_PATH}} --configfile ${{env.NUGETCONFIG_PATH}}
    
    - name: Build MAUI MacCatalyst project
      run: dotnet build ${{env.CSPROJ_PATH}} -c Release -f "${{env.MACOS_TFM}}" -p:RuntimeIdentifier=${{matrix.RID}} -p:PublishTrimmed=true -p:MtouchLink=SdkOnly

    # When you have an apple account and certificates, we can switch to this release setup

    # # Docs https://github.com/Apple-Actions/import-codesign-certs
    # - name: Import Code-Signing Certificates
    #   uses: Apple-Actions/import-codesign-certs@v2
    #   with:
    #     p12-file-base64: "${{secrets.APPLE_DISTRIBUTION_CERT_BASE64}}"
    #     p12-password: "${{secrets.APPLE_DISTRIBUTION_CERT_PASSWORD}}"

    # # Docs https://github.com/Apple-Actions/download-provisioning-profiles
    # - uses: Apple-Actions/download-provisioning-profiles@v2
    #   with:
    #     profile-type: ${{env.APP_ID}}
    #     bundle-id: "${{env.CODESIGN_PROV_PROFILE}}"
    #     issuer-id: "${{secrets.APPSTORE_API_ISSUER_ID}}"
    #     api-key-id: "${{secrets.APPSTORE_API_KEY_ID}}"
    #     api-private-key: "${{secrets.APPSTORE_API_PRIVATE_KEY}}"

    # # Docs https://learn.microsoft.com/en-us/dotnet/maui/mac-catalyst/deployment/publish-app-store?view=net-maui-9.0 (carefully follow the intructions about entitlements.plist and info.plist)
    # - name: Build MAUI MacCatalyst project
    #   run: |
    #     dotnet publish ${{env.CSPROJ_PATH}} -c ${{env.BUILD_CONFIGURATION}} -f "${{env.MACOS_TFM}}" -p:RuntimeIdentifier=${{env.RID}} -p:EnableCodeSigning=true -p:EnablePackageSigning=true -p:PublishTrimmed=true -p:MtouchLink=SdkOnly -p:ApplicationId=${{env.APP_ID}} -p:CodesignProvision=${{env.CODESIGN_PROV_PROFILE}} -p:CodesignKey=${{env.CODESIGN_KEY}} -p:CodesignEntitlements=${{env.CODESIGN_ENTITLEMENTS}}

    # WARNING ${{matrix.RID}} is in play, us if statement ${{matrix.RID}} == "testflight"
    # # Docs https://github.com/Apple-Actions/upload-testflight-build
    # - name: 'Upload app to TestFlight'
    #   uses: apple-actions/upload-testflight-build@v1
    #   with: 
    #     app-path: "${{github.workspace}}/**/*.pkg" 
    #     issuer-id: ${{secrets.APPSTORE_API_ISSUER_ID}}
    #     api-key-id: "${{secrets.APPSTORE_API_KEY_ID}}"
    #     api-private-key: "${{secrets.APPSTORE_API_PRIVATE_KEY}}"

    # - name: Publish MacCatalyst build artifacts
    #   uses: actions/upload-artifact@v4
    #   with:     
    #     name: "MacCatalyst artifacts" 
    #     path: "*.pkg"
    #     if-no-files-found: warn
    #     retention-days: 30

  # [JOB] Create GitHub Release [/JOB]
  create-gh-release:
    name: Codesign and Publish Release
    if: ${{ success() }}
    runs-on: windows-2022
    needs: [shared-resources, maui-macos, maui-ios, maui-android, maui-windows-sideload, maui-windows-msstore, publish_to_msstore]
    steps:
    # Download the artifacts from the previous jobs
    - uses: actions/download-artifact@v4

    # Login to Azure CLI. No secrets needed, uses the GitHub OIDC token to authenticate.
    - name: Azure login using OIDC via GitHub
      uses: azure/login@v2
      id: azlogin
      with:
        client-id: "32daa13b-f4bb-4809-8ef6-58cb39051acd"
        tenant-id: "bd47e796-3473-4b8a-9101-1f4c0c7af31a"
        subscription-id: "48ab4839-62af-4ab3-afe6-043ea4d7c137"

    # Codesign files with Trusted Signing
    - name: Sign files with Trusted Signing
      uses: azure/trusted-signing-action@v0.4.0
      with:
        endpoint: https://eus.codesigning.azure.net/
        trusted-signing-account-name: PrimaryCodeSign
        certificate-profile-name: lancemccarthylivepublic
        timestamp-rfc3161: http://timestamp.acs.microsoft.com
        timestamp-digest: SHA256
        file-digest: SHA256
        files-folder: ${{github.workspace}}
        files-folder-filter: msix
        files-folder-depth: 3
        exclude-azure-cli-credential: false
        exclude-environment-credential: true
        exclude-workload-identity-credential: true
        exclude-managed-identity-credential: true
        exclude-shared-token-cache-credential: true
        exclude-visual-studio-credential: true
        exclude-visual-studio-code-credential: true
        exclude-azure-powershell-credential: true
        exclude-azure-developer-cli-credential: true
        exclude-interactive-browser-credential: true

    # Create a GitHub release and attach the signed files
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        name: "XkcdViewer v${{needs.shared-resources.outputs.app_version}}"
        body: |
          This is v${{needs.shared-resources.outputs.app_version}} of the xkcd viewer app built with .NET MAUI and Telerik UI for Maui. To install, use the appropriate installer file for your device.
        files: ${{github.workspace}}/**/*
        tag_name: "v${{needs.shared-resources.outputs.app_version}}"
